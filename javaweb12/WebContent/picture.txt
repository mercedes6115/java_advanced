database connection pool

JDBC로 db에 접근할때 가장 많은 자원이 소모되는 부분은 db연동에 필요한 connection객체를 생성하는 부분 
지금까지는 sql문을 수행하기 위해서 conn객체를 생성하고 제거하는 과정을 반복했다 
이것은 사이트에 접근하는 유저들이 증가할 경우 시스템의 성능을 급격하게 저하시키게 된다
이러한 문제점을 해결하는 방법중 하나가 database connection pool을 이용한 방법

connection pool을 이용하게 되면 사용자가 요청할대마다 매번 새로운 conn객체를 생성하는 것이 아니라
일정한 개수의 conn객체를 미리 생성ㅇ한 다음 사용자의 요청이 있을때마다 가용한 객체를 할당하는 방식을 사용한다 

context.xml -DB연결 설정, ID, PW, 사용db, connection 개수, 최소유지 connection 수 등등 
			기본적인 설정을 해줌 

<?xml version="1.0" encoding="UTF-8"?>
<Context> // 설정 시작			
	<Resource name="jdbc/grouptalk"	// 자원 정의 DB명을 넣어준다
		auth ="Container"			
		type="javax.sql.DataSource"
		driverClassName ="com.mysql.jdbc.Driver"
		url="jdbc:mysql://localhost:3306/grouptalk?serverTimezone=UTC"
		username="root"   // DB ID
		password="a489348a!" // DB PW  여기까지가 DB인증 
		maxTotal="16" // connection pool에서 유지될수있는 conn객체의 최대 개수 user의 수를 제한하는것은 아님  
		maxIdle="4" // connection pool에서 유지돼야할 conn객체의 최소 개수
		maxWaitMillis="-1" /> // connection pool에서 가용한 conn객체가 없을 경우 대기시간을 지정 -1로 설정하면 그냥 대기시간없이 가용자원이 없음을 알려줌 

java -src-util-ConnectionPool.java

webcontent -META-INF - context.xml




테이블마다 하나의 DAO,DTO가 필요
DAO : data access object 모든 SQL 구문들을 통합 
DTO : data transfer object 해당 테이블과 연결을 위한 객체 